# Shell prompt based on the Solarized Dark theme.
# Screenshot: http://i.imgur.com/EkEtphC.png
# Heavily inspired by @necolas’s prompt: https://github.com/necolas/dotfiles
# iTerm → Profiles → Text → use 13pt Monaco with 1.1 vertical spacing.

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
export TERM='gnome-256color';
elif infocmp xterm-256color >/dev/null 2>&1; then
export TERM='xterm-256color';
fi;

prompt_git() {
  local branchName='';

# Check if the current directory is in a Git repository.
  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then

# check if the current directory is in .git before running git checks
    if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]; then

# Ensure the index is up to date.
      git update-index --really-refresh -q &>/dev/null;

  fi;

# Get the short symbolic ref.
# If HEAD isn’t a symbolic ref, get the short SHA for the latest commit
# Otherwise, just give up.
  branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
              git rev-parse --short HEAD 2> /dev/null || \
              echo '(unknown)')";

  echo -e "${1}${branchName}";
    else
      return;
  fi;
}

if tput setaf 1 &> /dev/null; then
  tput sgr0; # reset colors
normal=$(tput setaf 7)
  bold=$(tput bold);
  reset=$(tput sgr0);
# Regular bash colors
  black=$(tput setaf 0)
  red=$(tput setaf 1)
  green=$(tput setaf 2)
  yellow=$(tput setaf 3)
  blue=$(tput setaf 4)
  magenta=$(tput setaf 5)
  cyan=$(tput setaf 6)
white=$(tput setaf 7)
  else
  bold='';
  reset="\e[0m";
  black="\e[1;30m";
  blue="\e[1;34m";
  cyan="\e[1;36m";
  green="\e[1;32m";
  orange="\e[1;33m";
  purple="\e[1;35m";
  red="\e[1;31m";
  violet="\e[1;35m";
  white="\e[1;37m";
  yellow="\e[1;33m";
  fi;

# # Highlight the user name when logged in as root.
#   if [[ "${USER}" == "root" ]]; then
#   userStyle="${bold}${red}";
#   else
#   userStyle="${reset}${white}";
#   fi;
# 
# # Highlight the hostname when connected via SSH.
#   if [[ "${SSH_TTY}" ]]; then
#   hostStyle="${bold}${red}";
#   else
#   hostStyle="${reset}${white}";
#   fi;
# 
# Provide notification of node version
promptNVM() {
  if [ "x" != "x$NVM_BIN" ]; then
    echo -e " ${reset}${green}$(nvm current)";
  fi
}

# Set the terminal title to the current working directory.
PS1="\[\033]0;\w\007\]";
# PS1+="\n"; # newline
PS1+="\[${bold}${yellow}\]\w"; # working directory
PS1+="\$(prompt_git \" ${reset}${cyan}\")"; # Git repository details
PS1+="\$(promptNVM)";
# PS1+="\[${userStyle}\] \u"; # username
# PS1+="\[${reset}\]@";
# PS1+="\[${hostStyle}\]\h"; # host
PS1+="\[${reset}\]\n";
PS1+="\[${reset}${bold}\]\$ \[${reset}\]"; # `$` (and reset color)

# #  simple prompt
# PS1=" \w $ "
# #  simple prompt with color
# PS1="\[\033[1;33m\]\w\[\033[0m\] $ "
export PS1;

PS2="\[${yellow}\]→ \[${reset}\]";
export PS2;
